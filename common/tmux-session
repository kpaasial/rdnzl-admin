#!/bin/sh


tmux-session-cleanup()
{
    if [ -L "${USERSOCKET}" ]; then
        echo "Removing ${USERSOCKET}"
        rm "${USERSOCKET}"
    fi
}


if [ -n "$TMUX" ]; then
    # Already in tmux session, do nada
    echo "Already in a tmux session"
    exit 1
fi

# Command line arguments

while getopts d o
do
    case "$o" in
    d)  FORCE_DETACH="yes";;
    esac

done

shift $((OPTIND-1))



TMUX_SESSION=$1

: ${TMUX_SESSION:="sshwrap"}


USERSOCKET="/tmp/.wrap_auth_sock-${USER}-${TMUX_SESSION}"

# If forceful detaching of other sessions is requested do it here.
# This should cause the other client session to end and the
# socket link to be deleted.

if [ -n "${FORCE_DETACH}" ]; then
    tmux detach-client -s "${TMUX_SESSION}"
fi


# Set up symbolic link for ssh agent forwarding

# If there is a non-broken link to a socket do not overwrite it.
# The -d option can be used to detach the other session and
# have the link removed.
# If the link exists but is broken, remove it.
if [ -L "${USERSOCKET}" ]; then
    if [ -e "${USERSOCKET}" ]; then
        echo "Refusing to overwrite existing link"
        exit 1
    else
        # Remove the broken link
        rm "${USERSOCKET}"
    fi
fi

if [ -n  "$SSH_TTY" ] && [ -n "${SSH_AUTH_SOCK}" ]; then # Ssh connection and agent forwarding is on
    ln -s "$SSH_AUTH_SOCK" "${USERSOCKET}" # Create the symbolic link
    export SSH_AUTH_SOCK="${USERSOCKET}" # Set SSH_AUTH_SOCK to the link
    # Set up trap to clean the link automatically
    trap tmux-session-cleanup EXIT HUP
fi


export STY="tmux-${TMUX_SESSION}"


tmux new-session -A -s "${TMUX_SESSION}"

